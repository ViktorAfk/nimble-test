(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[63068,39519],{433494:function(n,a,s){"use strict";s.r(a),s.d(a,{default:function(){return l}}),s(192379);var e,t=s(470057),o={en:{description:"An overview of adopting CSS theme variables in Material\xa0UI.",location:"/docs/data/material/experimental-api/css-theme-variables/overview.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M22.8481 4C22.8481 2.9 21.9481 2 20.8481 2H4.84814C3.74814 2 2.84814 2.9 2.84814 4V16C2.84814 17.1 3.74814 18 4.84814 18H18.8481L22.8481 22V4ZM16.8481 11H13.8481V14C13.8481 14.55 13.3981 15 12.8481 15C12.2981 15 11.8481 14.55 11.8481 14V11H8.84814C8.29814 11 7.84814 10.55 7.84814 10C7.84814 9.45 8.29814 9 8.84814 9H11.8481V6C11.8481 5.45 12.2981 5 12.8481 5C13.3981 5 13.8481 5.45 13.8481 6V9H16.8481C17.3981 9 17.8481 9.45 17.8481 10C17.8481 10.55 17.3981 11 16.8481 11Z" />\n      </symbol>\n      </svg>','<h1>CSS theme variables</h1><p class="description">An overview of adopting CSS theme variables in Material\xa0UI.</p>\n\n<p><a href="https://www.w3.org/TR/css-variables-1/" target="_blank" rel="noopener nofollow">CSS variables</a> are a modern cross-browser feature that let you declare variables in CSS and reuse them in other properties.\nYou can implement them to improve Material\xa0UI&#39;s theming and customization experience.</p>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>If this is your first time encountering CSS variables, you should check out <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties">the MDN Web Docs on CSS custom properties</a> before continuing here.</p>\n\n</div></aside><h2 id="introduction">Introduction<a aria-labelledby="introduction" class="anchor-link" href="#introduction" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="introduction"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>CSS theme variable support is a new feature in Material\xa0UI added in <a href="https://github.com/mui/material-ui/releases/tag/v5.6.0"><code>v5.6.0</code></a> (but not enabled by default). It tells Material\xa0UI components to use the generated CSS theme variables instead of raw values. This provides significant improvements in developer experience related to theming and customization.\nWith these variables, you can inject a theme into your app&#39;s stylesheet <em>at build time</em> to apply the user&#39;s selected settings before the whole app is rendered.</p>\n<h2 id="advantages">Advantages<a aria-labelledby="advantages" class="anchor-link" href="#advantages" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="advantages"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><ul>\n<li>It lets you prevent <a href="https://github.com/mui/material-ui/issues/27651">dark-mode SSR flickering</a>.</li>\n<li>You can create unlimited color schemes beyond <code>light</code> and <code>dark</code>.</li>\n<li>It offers a better debugging experience not only for developers but also designers on your team.</li>\n<li>The color scheme of your website is automatically synced between browser tabs.</li>\n<li>It simplifies integration with third-party tools because CSS theme variables are available globally.</li>\n<li>It reduces the need for a nested theme when you want to apply dark styles to a specific part of your application.</li>\n</ul>\n<h2 id="trade-offs">Trade-offs<a aria-labelledby="trade-offs" class="anchor-link" href="#trade-offs" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="trade-offs"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>For server-side applications, there are some trade-offs to consider:</p>\n<table>\n<thead>\n<tr>\n<th align="left"></th>\n<th align="left">Compare to the default method</th>\n<th align="left">Reason</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">HTML size</td>\n<td align="left">Bigger</td>\n<td align="left">CSS variables are generated for both light and dark mode at build time.</td>\n</tr>\n<tr>\n<td align="left"><a href="https://web.dev/articles/fcp">First Contentful Paint (FCP)</a></td>\n<td align="left">Longer</td>\n<td align="left">Since the HTML size is bigger, the time to download the HTML before showing the content is a bit longer.</td>\n</tr>\n<tr>\n<td align="left"><a href="https://web.dev/articles/tti">Time to Interactive (TTI)</a></td>\n<td align="left">Shorter (for dark mode)</td>\n<td align="left">Stylesheets are not regenerated between light and dark mode, a lot less time is spent running JavaScript code.</td>\n</tr>\n</tbody></table>\n<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>The comparison described in the table above may not be applicable to large and complex applications since there are so many factors that can impact performance metrics.</p>\n\n</div></aside><h2 id="mental-model">Mental model<a aria-labelledby="mental-model" class="anchor-link" href="#mental-model" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="mental-model"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Adopting CSS variables requires some shifts in your mental model of theming and customizing user-selected modes.</p>\n<h3 id="colors">Colors<a aria-labelledby="colors" class="anchor-link" href="#colors" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="colors"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p><strong><a href="/material-ui/customization/dark-mode/">Default approach</a></strong>: Light and dark colors are created separately.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> createTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> lightTheme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> darkTheme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">palette</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">\'dark\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p><strong>CSS theme variables</strong>: Light and dark colors are consolidated into a theme.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> experimental_extendTheme <span class="token keyword">as</span> extendTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// `extendTheme` is a new API</span>\n<span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">colorSchemes</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">light</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// palette for light mode</span>\n      <span class="token literal-property property">palette</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">dark</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// palette for dark mode</span>\n      <span class="token literal-property property">palette</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="styling">Styling<a aria-labelledby="styling" class="anchor-link" href="#styling" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="styling"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p><strong>Default approach</strong>: Usually relies on JavaScript to switch the value between modes:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">MuiButton</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token comment">// use JavaScript conditional expression</span>\n          <span class="token literal-property property">color</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>mode <span class="token operator">===</span> <span class="token string">\'dark\'</span> <span class="token operator">?</span> <span class="token string">\'#fff\'</span> <span class="token operator">:</span> theme<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>main<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p><strong>CSS theme variables</strong>: Styling leans toward cascading and specificity by using the appropriate selector which lets you prevent <a href="https://github.com/mui/material-ui/issues/27651">dark-mode SSR flickering</a>:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">MuiButton</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">color</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>main<span class="token punctuation">,</span>\n          <span class="token comment">// When the mode switches to dark, the attribute selector is attached to</span>\n          <span class="token comment">// the &lt;html> tag by default.</span>\n          <span class="token string-property property">\'[data-mui-color-scheme="dark"] &amp;\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'#fff\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="whats-next">What&#39;s next<a aria-labelledby="whats-next" class="anchor-link" href="#whats-next" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="whats-next"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><ul>\n<li>To start a new project with CSS theme variables, check out the <a href="/material-ui/experimental-api/css-theme-variables/usage/">basic usage guide</a>.</li>\n<li>For an existing Material\xa0UI project, check out the <a href="/material-ui/experimental-api/css-theme-variables/migration/">migration guide</a>.</li>\n<li>For theming and customization, check out the <a href="/material-ui/experimental-api/css-theme-variables/customization/">how-to guide</a>.</li>\n</ul>\n'],toc:[{text:"Introduction",level:2,hash:"introduction",children:[]},{text:"Advantages",level:2,hash:"advantages",children:[]},{text:"Trade-offs",level:2,hash:"trade-offs",children:[]},{text:"Mental model",level:2,hash:"mental-model",children:[{text:"Colors",level:3,hash:"colors"},{text:"Styling",level:3,hash:"styling"}]},{text:"What&#39;s next",level:2,hash:"whats-next",children:[]}],title:"CSS theme variables",headers:{components:[]}}},p={};p.scope={process:{},import:{}};var i={},c=s(200651);function l(){return e||(e=(0,c.jsx)(t.Z,{demos:p,docs:o,demoComponents:i}))}},470057:function(n,a,s){"use strict";s.d(a,{Z:function(){return b}});var e,t=s(41732),o=s(192379),p=s(639519),i=s.n(p),c=s(291076),l=s(481835),r=s(148912),u=s(292802),d=s(999574),h=s(544602),k=s(678979),m=s(58329),g=s(241484),v=s(950941),y=s(200651);function f(n){var a=n.mode,s=(0,r.tv)().setMode;return o.useEffect(function(){s(a)},[a,s]),null}function b(n){var a=(0,l.Z)(),s=(0,c.useRouter)(),p=(0,d.ln)(s.asPath).canonicalAs,i=n.disableAd,b=void 0!==i&&i,C=n.disableToc,w=n.disableCssVarsProvider,x=n.demos,M=void 0===x?{}:x,S=n.docs,T=n.demoComponents,H=n.srcComponents,I=S[(0,k.useUserLanguage)()]||S.en,_=p.startsWith("/joy-ui/")&&!(void 0!==w&&w),P=_?r.lL:o.Fragment,Z=_?m.BrandingProvider:o.Fragment,A=(0,t.Z)({},_&&{mode:a.palette.mode});return(0,y.jsxs)(h.Z,{cardOptions:{description:I.headers.cardDescription,title:I.headers.cardTitle},description:I.description,disableAd:b,disableToc:void 0!==C&&C,location:I.location,title:I.title,toc:I.toc,children:[b?null:e||(e=(0,y.jsx)(m.BrandingProvider,{children:(0,y.jsx)(v.Z,{children:(0,y.jsx)(g.ZP,{})})})),(0,y.jsxs)(P,{children:[_&&(0,y.jsx)(f,{mode:a.palette.mode}),I.rendered.map(function(n,s){return(0,y.jsx)(u.Z,{demoComponents:T,demos:M,disableAd:b,localizedDoc:I,renderedMarkdownOrDemo:n,srcComponents:H,theme:a,WrapperComponent:Z,wrapperProps:A},"demos-section-".concat(s))})]})]})}f.propTypes={mode:i().oneOf(["light","dark"])}},114143:function(n,a,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/experimental-api/css-theme-variables/overview",function(){return s(433494)}])},884835:function(n,a,s){"use strict";var e=s(311596);function t(){}function o(){}o.resetWarningCache=t,n.exports=function(){function n(n,a,s,t,o,p){if(p!==e){var i=Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function a(){return n}n.isRequired=n;var s={array:n,bigint:n,bool:n,func:n,number:n,object:n,string:n,symbol:n,any:n,arrayOf:a,element:n,elementType:n,instanceOf:a,node:n,objectOf:a,oneOf:a,oneOfType:a,shape:a,exact:a,checkPropTypes:o,resetWarningCache:t};return s.PropTypes=s,s}},639519:function(n,a,s){n.exports=s(884835)()},311596:function(n){"use strict";n.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"}},function(n){n.O(0,[49774,56525,50014,60571,97146,4730,24184,17376,68874,8817,30816,95218,7704,85825,65154,35812,28849,68430,70186,99728,7733,61575,75363,45393,57614,13794,26074,34286,92802,92888,40179],function(){return n(n.s=114143)}),_N_E=n.O()}]);